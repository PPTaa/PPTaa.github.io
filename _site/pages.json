[{"permalink":"/Main/Algo/","layout":"default","title":"Algo","content":"# Algo\n\n{% include list.liquid all=true %}\n","dir":"/Main/Algo/","name":"README.md","path":"Main/Algo/README.md","url":"/Main/Algo/"},{"permalink":"//","layout":"default","title":"PPTaa 블로그","content":"# PPTaa 블로그\n\n![CI](https://github.com/rundocs/jekyll-rtd-theme/workflows/CI/badge.svg?branch=v2)\n![jsDelivr](https://data.jsdelivr.com/v1/package/gh/rundocs/jekyll-rtd-theme/badge)\n\nOpinionated standard documentation theme, with few options, but everything!\n\n## What it does?\n\nThis theme is inspired by [sphinx-rtd-theme](https://github.com/readthedocs/sphinx_rtd_theme) and refactored with:\n\n- [@primer/css](https://github.com/primer/css)\n- [github-pages](https://github.com/github/pages-gem) ([dependency versions](https://pages.github.com/versions/))\n\n## Quick start\n\n```yml\nremote_theme: rundocs/jekyll-rtd-theme\n```\n\nYou can [generate](https://github.com/rundocs/starter-slim/generate) with the same files and folders from [rundocs/starter-slim](https://github.com/rundocs/starter-slim/)\n\n## Usage\n\nDocumentation that can guide how to create with Github pages, please refer to [rundocs.io](https://rundocs.io) for details\n\n## Features\n\n- Shortcodes (Toasts card, mermaid)\n- Pages Plugins (emoji, gist, avatar, mentions)\n- Auto generate sidebar\n- [Attribute List Definitions](https://kramdown.gettalong.org/syntax.html#attribute-list-definitions) (Primer/css utilities, Font Awesome 4)\n- Service worker (caches)\n- SEO (404, robots.txt, sitemap.xml)\n- Canonical Link (Open Graph, Twitter Card, Schema data)\n\n## Options\n\n| name | default value | description |\n| ------------- | -------------------- | ----------------- |\n| `title` | repo name | |\n| `description` | repo description | |\n| `url` | user domain or cname | |\n| `baseurl` | repo name | |\n| `lang` | `en` | |\n| `direction` | `auto` | `ltr` or `rtl` |\n| `highlighter` | `rouge` | Cannot be changed |\n\n```yml\n# folders sort\nreadme_index:\n with_frontmatter: true\n\nmeta:\n key1: value1\n key2: value2\n .\n .\n .\n\ngoogle:\n gtag:\n adsense:\n\nmermaid:\n custom: # mermaid link\n initialize: # mermaid options, default: {}\n\n# also available via file: _include/assets/custom.scss\nscss:\n\n# also available via file: _include/assets/custom.js\nscript:\n\n# also available via file: _data/translate.yml\ntranslate:\n # shortcodes\n danger:\n note:\n tip:\n warning:\n # 404\n not_found:\n # copyright\n revision:\n # search\n searching:\n search:\n search_docs:\n search_results:\n search_results_found: # the \"#\" in this translate will replaced with results size!\n search_results_not_found:\n\nplugins:\n - jemoji\n - jekyll-avatar\n - jekyll-mentions\n```\n\n## The license\n\nThe theme is available as open source under the terms of the MIT License\n","dir":"/","name":"README.md","path":"README.md","url":"/"},{"sort":1,"layout":"default","comments":true,"title":"[백준] 1927번 - 최소 힙","content":"<h1 id=\"백준-1927번---최소-힙\">[백준] 1927번 - <strong>최소 힙</strong></h1>\n\n<h2 id=\"문제\">문제</h2>\n\n<p>널리 잘 알려진 자료구조 중 최소 힙이라는 것이 있다. 최소 힙을 이용하여 다음과 같은 연산을 지원하는 프로그램을 작성하시오.</p>\n\n<ol>\n <li>배열에 자연수 x를 넣는다.</li>\n <li>배열에서 가장 작은 값을 출력하고, 그 값을 배열에서 제거한다.</li>\n</ol>\n\n<p>프로그램은 처음에 비어있는 배열에서 시작하게 된다.</p>\n\n<p>source : <a href=\"https://www.acmicpc.net/problem/1927\">문제링크 백준 - 1927</a></p>\n\n<h2 id=\"내-코드\">내 코드</h2>\n\n<p>0 이 입력되었을 때 작은 값 부터 차례대로 출력되야 하기 때문에 heap 구조를 사용해야함</p>\n\n<p>heap 구조를 구현시켜주는 파이썬 라이브러리 heapq를 사용하기로함</p>\n\n<div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"kn\">import</span> <span class=\"nn\">heapq</span>\n\n<span class=\"n\">n</span> <span class=\"o\">=</span> <span class=\"nb\">int</span><span class=\"p\">(</span><span class=\"nb\">input</span><span class=\"p\">())</span>\n<span class=\"n\">heap</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n<span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n\n<span class=\"k\">for</span> <span class=\"n\">_</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"n\">n</span><span class=\"p\">):</span>\n  <span class=\"n\">data</span> <span class=\"o\">=</span> <span class=\"nb\">int</span><span class=\"p\">(</span><span class=\"nb\">input</span><span class=\"p\">())</span>\n  <span class=\"c1\"># 입력값이 0 이라면\n</span>  <span class=\"k\">if</span> <span class=\"n\">data</span> <span class=\"o\">==</span> <span class=\"mi\">0</span><span class=\"p\">:</span>\n    <span class=\"c1\"># heap에 데이터가 있는지 확인\n</span>    <span class=\"k\">if</span> <span class=\"n\">heap</span><span class=\"p\">:</span>\n      <span class=\"c1\"># 있다면 heap의 데이터를 뽑아내서 result에 append\n</span>      <span class=\"n\">result</span><span class=\"p\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">heapq</span><span class=\"p\">.</span><span class=\"n\">heappop</span><span class=\"p\">(</span><span class=\"n\">heap</span><span class=\"p\">))</span>\n    <span class=\"k\">else</span><span class=\"p\">:</span>\n      <span class=\"c1\"># 없다면 result에 0을 append\n</span>      <span class=\"n\">result</span><span class=\"p\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">)</span>\n  <span class=\"c1\"># 입력값이 0 이 아닌 정수라면 heap에 데이터를 추가\n</span>  <span class=\"k\">else</span><span class=\"p\">:</span>\n    <span class=\"n\">heapq</span><span class=\"p\">.</span><span class=\"n\">heappush</span><span class=\"p\">(</span><span class=\"n\">heap</span><span class=\"p\">,</span> <span class=\"n\">data</span><span class=\"p\">)</span>\n    \n<span class=\"c1\"># 백준의 양식에 맞게 출력  \n</span><span class=\"k\">for</span> <span class=\"n\">data</span> <span class=\"ow\">in</span> <span class=\"n\">result</span><span class=\"p\">:</span>\n  <span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"p\">)</span>\n</code></pre>  </div></div>\n\n<p>기본적인 힙의 구조를 숙지하면 간단하게 풀이할 수 있다~!</p>\n\n<div id=\"disqus_thread\"></div>\n<script>\n\n/**\n* RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS.\n* LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/\n/*\nvar disqus_config = function () {\nthis.page.url = PAGE_URL; // Replace PAGE_URL with your page's canonical URL variable\nthis.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable\n};\n*/\n(function() { // DON'T EDIT BELOW THIS LINE\nvar d = document, s = d.createElement('script');\ns.src = 'https://pptaa-blog.disqus.com/embed.js';\ns.setAttribute('data-timestamp', +new Date());\n(d.head || d.body).appendChild(s);\n})();\n</script>\n\n<noscript>Please enable JavaScript to view the <a href=\"https://disqus.com/?ref_noscript\">comments powered by Disqus.</a></noscript>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>\n  \n  &lt;div id=\"disqus_thread\"&gt;&lt;/div&gt;\n&lt;script&gt;\n\n/**\n*  RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS.\n*  LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/\n/*\nvar disqus_config = function () {\nthis.page.url = PAGE_URL;  // Replace PAGE_URL with your page's canonical URL variable\nthis.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable\n};\n*/\n(function() { // DON'T EDIT BELOW THIS LINE\nvar d = document, s = d.createElement('script');\ns.src = 'https://pptaa-blog.disqus.com/embed.js';\ns.setAttribute('data-timestamp', +new Date());\n(d.head || d.body).appendChild(s);\n})();\n&lt;/script&gt;\n&lt;noscript&gt;Please enable JavaScript to view the &lt;a href=\"https://disqus.com/?ref_noscript\"&gt;comments powered by Disqus.&lt;/a&gt;&lt;/noscript&gt;\n\n\n\n</code></pre>  </div></div>\n","dir":"/Main/Algo/","name":"[백준] 1927번 - 최소 힙.md","path":"Main/Algo/[백준] 1927번 - 최소 힙.md","url":"/Main/Algo/%5B%E1%84%87%E1%85%A2%E1%86%A8%E1%84%8C%E1%85%AE%E1%86%AB%5D%201927%E1%84%87%E1%85%A5%E1%86%AB%20-%20%E1%84%8E%E1%85%AC%E1%84%89%E1%85%A9%20%E1%84%92%E1%85%B5%E1%86%B8.html"},{"comments":true,"sort":2,"layout":"default","title":"[백준] 1697번 - 숨바꼭질","content":"<h1 id=\"백준-1697번---숨바꼭질\">[백준] 1697번 - <strong>숨바꼭질</strong></h1>\n\n<h2 id=\"문제\">문제</h2>\n\n<p>수빈이는 동생과 숨바꼭질을 하고 있다. 수빈이는 현재 점 N(0 ≤ N ≤ 100,000)에 있고, 동생은 점 K(0 ≤ K ≤ 100,000)에 있다. 수빈이는 걷거나 순간이동을 할 수 있다. 만약, 수빈이의 위치가 X일 때 걷는다면 1초 후에 X-1 또는 X+1로 이동하게 된다. 순간이동을 하는 경우에는 1초 후에 2*X의 위치로 이동하게 된다.</p>\n\n<p>수빈이와 동생의 위치가 주어졌을 때, 수빈이가 동생을 찾을 수 있는 가장 빠른 시간이 몇 초 후인지 구하는 프로그램을 작성하시오.</p>\n\n<p>source : <a href=\"https://www.acmicpc.net/problem/1697\">문제링크 백준 - 1697</a></p>\n\n<h2 id=\"내-코드\">내 코드</h2>\n\n<p>데이터의 저장과 반환을 간편하게 하기 위해 deque 라이브러리를 사용</p>\n\n<p>너비우선 탐색 방식을 사용하여 하위 노드의 값과 찾아야하는 값을 비교하는 것으로 탐색</p>\n\n<p>max는 문제에서 n, k의 값이 100,000 까지이므로 범위를 설정하기위해 설정</p>\n\n<div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"kn\">from</span> <span class=\"nn\">collections</span> <span class=\"kn\">import</span> <span class=\"n\">deque</span>\n<span class=\"c1\"># 수빈이와 동생이 있을 수 있는 범위\n</span><span class=\"n\">Max</span> <span class=\"o\">=</span> <span class=\"mi\">100001</span>\n<span class=\"c1\"># 수빈이의 위치 n, 동생의 위치 k\n</span><span class=\"n\">n</span><span class=\"p\">,</span> <span class=\"n\">k</span> <span class=\"o\">=</span> <span class=\"nb\">map</span><span class=\"p\">(</span><span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">input</span><span class=\"p\">().</span><span class=\"n\">split</span><span class=\"p\">())</span>\n<span class=\"c1\"># 동적프로그래밍을 위한 array생성\n</span><span class=\"n\">array</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span> <span class=\"o\">*</span> <span class=\"n\">Max</span>\n\n<span class=\"c1\"># 너비우선 탐색으로 시작\n</span><span class=\"k\">def</span> <span class=\"nf\">bfs</span><span class=\"p\">():</span>\n    <span class=\"n\">q</span> <span class=\"o\">=</span> <span class=\"n\">deque</span><span class=\"p\">([</span><span class=\"n\">n</span><span class=\"p\">])</span>\n    <span class=\"c1\"># q 가 없을때 까지 반복\n</span>    <span class=\"k\">while</span> <span class=\"n\">q</span><span class=\"p\">:</span>\n      \t<span class=\"c1\"># q의 값을 왼쪽에서 부터 뽑아서 부모 노드라고 지정\n</span>        <span class=\"n\">parent_node</span> <span class=\"o\">=</span> <span class=\"n\">q</span><span class=\"p\">.</span><span class=\"n\">popleft</span><span class=\"p\">()</span>\n        <span class=\"c1\"># 뽑은 값이 동생의 위치라면 그 값의 array 값을 반환\n</span>        <span class=\"k\">if</span> <span class=\"n\">parent_node</span> <span class=\"o\">==</span> <span class=\"n\">k</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"n\">array</span><span class=\"p\">[</span><span class=\"n\">parent_node</span><span class=\"p\">]</span>\n        <span class=\"c1\"># 부모노드의 -1, +1, *2 값을 자식노드로 정하고 확인\n</span>        <span class=\"k\">for</span> <span class=\"n\">child_node</span> <span class=\"ow\">in</span> <span class=\"p\">(</span><span class=\"n\">parent_node</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">parent_node</span><span class=\"o\">+</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">parent_node</span><span class=\"o\">*</span><span class=\"mi\">2</span><span class=\"p\">):</span>\n          \t<span class=\"c1\"># 자식노드가 벗어나지 않았거나 자식노드의 값을 방문한 적이 없으면\n</span>            <span class=\"k\">if</span> <span class=\"mi\">0</span> <span class=\"o\">&lt;=</span> <span class=\"n\">child_node</span> <span class=\"o\">&lt;</span> <span class=\"n\">Max</span> <span class=\"ow\">and</span> <span class=\"ow\">not</span> <span class=\"n\">array</span><span class=\"p\">[</span><span class=\"n\">child_node</span><span class=\"p\">]:</span>\n              \t<span class=\"c1\"># 자식노드의 값에 부모노드의 값 + 1\n</span>                <span class=\"n\">array</span><span class=\"p\">[</span><span class=\"n\">child_node</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">array</span><span class=\"p\">[</span><span class=\"n\">parent_node</span><span class=\"p\">]</span> <span class=\"o\">+</span> <span class=\"mi\">1</span>\n                <span class=\"c1\"># 자식노드를 q에 저장 \n</span>                <span class=\"n\">q</span><span class=\"p\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">child_node</span><span class=\"p\">)</span>\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">bfs</span><span class=\"p\">())</span>\n</code></pre>  </div></div>\n\n<p>ex) n= 1, k=8 일 경우</p>\n\n<p>array 시작</p>\n\n<table>\n <thead>\n <tr>\n <th>0</th>\n <th>1</th>\n <th>2</th>\n <th>3</th>\n <th>4</th>\n <th>5</th>\n <th>6</th>\n <th>7</th>\n <th>8</th>\n <th>9</th>\n </tr>\n </thead>\n <tbody>\n <tr>\n <td>0</td>\n <td>0</td>\n <td>0</td>\n <td>0</td>\n <td>0</td>\n <td>0</td>\n <td>0</td>\n <td>0</td>\n <td>0</td>\n <td>0</td>\n </tr>\n </tbody>\n</table>\n\n<p>array 첫번째 반복</p>\n\n<table>\n <thead>\n <tr>\n <th>0</th>\n <th>1</th>\n <th>2</th>\n <th>3</th>\n <th>4</th>\n <th>5</th>\n <th>6</th>\n <th>7</th>\n <th>8</th>\n <th>9</th>\n </tr>\n </thead>\n <tbody>\n <tr>\n <td>1</td>\n <td>0</td>\n <td>1</td>\n <td>0</td>\n <td>0</td>\n <td>0</td>\n <td>0</td>\n <td>0</td>\n <td>0</td>\n <td>0</td>\n </tr>\n </tbody>\n</table>\n\n<p>array 두번째 반복</p>\n\n<table>\n <thead>\n <tr>\n <th>0</th>\n <th>1</th>\n <th>2</th>\n <th>3</th>\n <th>4</th>\n <th>5</th>\n <th>6</th>\n <th>7</th>\n <th>8</th>\n <th>9</th>\n </tr>\n </thead>\n <tbody>\n <tr>\n <td>1</td>\n <td>2</td>\n <td>1</td>\n <td>2</td>\n <td>2</td>\n <td>0</td>\n <td>0</td>\n <td>0</td>\n <td>0</td>\n <td>0</td>\n </tr>\n </tbody>\n</table>\n\n<p>array 세번째 반복</p>\n\n<table>\n <thead>\n <tr>\n <th>0</th>\n <th>1</th>\n <th>2</th>\n <th>3</th>\n <th>4</th>\n <th>5</th>\n <th>6</th>\n <th>7</th>\n <th>8</th>\n <th>9</th>\n </tr>\n </thead>\n <tbody>\n <tr>\n <td>1</td>\n <td>2</td>\n <td>1</td>\n <td>2</td>\n <td>2</td>\n <td>3</td>\n <td>3</td>\n <td>4</td>\n <td>3</td>\n <td>0</td>\n </tr>\n </tbody>\n</table>\n\n<p>8은 3번째의 반복에 찾을 수 있다.</p>\n","dir":"/Main/Algo/","name":"[백준] 1697번 - 숨바꼭질.md","path":"Main/Algo/[백준] 1697번 - 숨바꼭질.md","url":"/Main/Algo/%5B%E1%84%87%E1%85%A2%E1%86%A8%E1%84%8C%E1%85%AE%E1%86%AB%5D%201697%E1%84%87%E1%85%A5%E1%86%AB%20-%20%E1%84%89%E1%85%AE%E1%86%B7%E1%84%87%E1%85%A1%E1%84%81%E1%85%A9%E1%86%A8%E1%84%8C%E1%85%B5%E1%86%AF.html"},{"sort":2,"permalink":"/Main/","layout":"default","title":"Main","content":"<h1 id=\"main\">Main</h1>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>{% include list.liquid all=true %}\n\n\n- [Algo](/Main/Algo/)\n    - [[백준] 1927번 - 최소 힙](/Main/Algo/%5B%EB%B0%B1%EC%A4%80%5D%201927%EB%B2%88%20-%20%EC%B5%9C%EC%86%8C%20%ED%9E%99.html)\n    - [[백준] 1697번 - 숨바꼭질](/Main/Algo/%5B%EB%B0%B1%EC%A4%80%5D%201697%EB%B2%88%20-%20%EC%88%A8%EB%B0%94%EA%BC%AD%EC%A7%88.html)\n</code></pre>  </div></div>\n\n<ul>\n <li><a href=\"/Main/Algo/\">Algo</a>\n <ul>\n <li><a href=\"/Main/Algo/%5B%EB%B0%B1%EC%A4%80%5D%201927%EB%B2%88%20-%20%EC%B5%9C%EC%86%8C%20%ED%9E%99.html\">[백준] 1927번 - 최소 힙</a></li>\n <li><a href=\"/Main/Algo/%5B%EB%B0%B1%EC%A4%80%5D%201697%EB%B2%88%20-%20%EC%88%A8%EB%B0%94%EA%BC%AD%EC%A7%88.html\">[백준] 1697번 - 숨바꼭질</a></li>\n </ul>\n </li>\n</ul>\n","dir":"/Main/","name":"README.md","path":"Main/README.md","url":"/Main/"}]